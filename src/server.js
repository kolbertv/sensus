// API написано по возможности с минимальными зависимостями от сторонник библиотек, от PG уйти нельзя, необходимое "зло".
// Вместо экспресса или другого подобного фреймворка использован самописный роутинг, простой, без лишнего кода и внешних зависимостей
// Проверок на ошибки нету, но ясно, что все данные которые получаем от клиента, данные которые записываем в базу, должны проверятся.
// position.csv данные для импорта в базу
// в insomnia_xxxxxx.json - запросы для API клиента https://insomnia.rest/
// database.sql скрипт для создания таблицы position
// db.js подключение к базе и данные для подключения

const PORT = 3000;

const { createServer } = require("http");
const router = require("./router/router");

// создание сервера
const server = createServer();
server.on("request", (req, res) => {
  let jsonData = "";
  //получение частей данных которые передаются от приложения в теле запроса и сбор их в один файл
  //данные принимаются в формате джсон
  req.on("data", (data) => {
    jsonData += data;
  });

  // при получении евента "end" об окончании передачи данных
  // вызываем колбек функцию простого самодельного роутера без "смсок" и экспресса,
  // чтобы не тащить кучу зависимостей и не нужного кода
  req.on("end", () => {
    //парсинг данных которые получили от приложения
    router(req, res, JSON.parse(jsonData));
  });
});

server.listen(3000, () => {
  console.log(`Server started at port ${PORT}`);
});

module.exports = server;
